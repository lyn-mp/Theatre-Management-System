package Theatre;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author HP
 */
public class Movietable extends javax.swing.JFrame {

    /**
     * Creates new form Movietable
     */
    public Movietable() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        LMovieId = new javax.swing.JLabel();
        TMovieId = new javax.swing.JTextField();
        LMovieName = new javax.swing.JLabel();
        TMovieName = new javax.swing.JTextField();
        MLanguage = new javax.swing.JLabel();
        TLanguage = new javax.swing.JTextField();
        MShowtime = new javax.swing.JLabel();
        TShowtime = new javax.swing.JTextField();
        MGenre = new javax.swing.JLabel();
        TGenre = new javax.swing.JTextField();
        JMback = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        JMInsert = new javax.swing.JButton();
        JMUpdate = new javax.swing.JButton();
        JMdelete = new javax.swing.JButton();
        JMsave = new javax.swing.JButton();
        JMview = new javax.swing.JButton();
        JMClear = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        LMovieId.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        LMovieId.setText("Movie Id");

        TMovieId.setFont(new java.awt.Font("Cambria", 3, 18)); // NOI18N
        TMovieId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TMovieIdActionPerformed(evt);
            }
        });

        LMovieName.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        LMovieName.setText("Movie Name");

        TMovieName.setFont(new java.awt.Font("Cambria", 3, 18)); // NOI18N
        TMovieName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TMovieNameActionPerformed(evt);
            }
        });

        MLanguage.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        MLanguage.setText("Language");

        TLanguage.setFont(new java.awt.Font("Cambria", 3, 18)); // NOI18N
        TLanguage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TLanguageActionPerformed(evt);
            }
        });

        MShowtime.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        MShowtime.setText("Show time");

        TShowtime.setFont(new java.awt.Font("Cambria", 3, 18)); // NOI18N
        TShowtime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TShowtimeActionPerformed(evt);
            }
        });

        MGenre.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        MGenre.setText("Genre");

        TGenre.setFont(new java.awt.Font("Cambria", 3, 18)); // NOI18N
        TGenre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TGenreActionPerformed(evt);
            }
        });

        JMback.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        JMback.setText("BACK");
        JMback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMbackActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Movie_Id", "Movie_Name", "Language", "Show_time", "Genre"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        JMInsert.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        JMInsert.setText("Insert");
        JMInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMInsertActionPerformed(evt);
            }
        });

        JMUpdate.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        JMUpdate.setText("Update");
        JMUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMUpdateActionPerformed(evt);
            }
        });

        JMdelete.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        JMdelete.setText("Delete");
        JMdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMdeleteActionPerformed(evt);
            }
        });

        JMsave.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        JMsave.setText("Save");
        JMsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMsaveActionPerformed(evt);
            }
        });

        JMview.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        JMview.setText("View");
        JMview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMviewActionPerformed(evt);
            }
        });

        JMClear.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        JMClear.setText("Clear");
        JMClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMClearActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Cambria", 3, 24)); // NOI18N
        jLabel2.setText("MOVIE");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(121, 121, 121)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(MLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(LMovieName, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(MGenre, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(38, 38, 38))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(LMovieId, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(MShowtime, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TGenre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TShowtime, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TLanguage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TMovieName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TMovieId, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 60, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(JMback, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JMInsert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JMdelete, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                    .addComponent(JMClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JMview, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JMsave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JMUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(50, 50, 50))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(JMInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(133, 133, 133))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(TMovieId, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(JMsave, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(LMovieId, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(LMovieName, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(TMovieName, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(JMUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(TShowtime, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MShowtime, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(JMdelete, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(JMview, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JMClear, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MGenre, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(TGenre, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(JMback, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TMovieIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TMovieIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TMovieIdActionPerformed

    private void TMovieNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TMovieNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TMovieNameActionPerformed

    private void TLanguageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TLanguageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TLanguageActionPerformed

    private void TShowtimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TShowtimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TShowtimeActionPerformed

    private void TGenreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TGenreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TGenreActionPerformed

    private void JMInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMInsertActionPerformed
         String mid = TMovieId.getText();
         String mname = TMovieName.getText();
         String lang = TLanguage.getText();
         String time = TShowtime.getText();
         String genre = TGenre.getText();
         
                String tbData[]= {mid,mname,lang,time,genre};
                DefaultTableModel tb1Mode1 = (DefaultTableModel) jTable1.getModel();
                tb1Mode1.addRow(tbData);
                TMovieId.setText("");
                TMovieName.setText("");
                TLanguage.setText("");
                TShowtime.setText("");
                TGenre.setText("");

    }//GEN-LAST:event_JMInsertActionPerformed

    private void JMviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMviewActionPerformed
      try{
        Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/projectdb","root","lynjsql#22");
            Statement stmt= con.createStatement();
            String sql = "select * from movie";
            ResultSet rs = stmt.executeQuery(sql);
            while(rs.next())
            {
                String mid = rs.getString("movie_id");
                String mname = rs.getString("movie_name");
                String lang = rs.getString("language");
                String time = rs.getString("show_time");
                String genre = rs.getString("genre");
                
                String tbData[]= {mid,mname,lang,time,genre};
                DefaultTableModel tb1Mode1 = (DefaultTableModel) jTable1.getModel();
                tb1Mode1.addRow(tbData);
            }
            con.close();
        }catch (Exception ex) {
            Logger.getLogger(customer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_JMviewActionPerformed

    private void JMUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMUpdateActionPerformed
        DefaultTableModel tb5Model = (DefaultTableModel) jTable1.getModel();
        if(jTable1.getSelectedRowCount()==1){
            try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/projectdb","root","lynjsql#22");
         String mid = TMovieId.getText();
         String mname = TMovieName.getText();
         String lang = TLanguage.getText();
         String time = TShowtime.getText();
         String genre = TGenre.getText();
         tb5Model.setValueAt(mid,jTable1.getSelectedRow(),0);
         tb5Model.setValueAt(mname,jTable1.getSelectedRow(),1);
         tb5Model.setValueAt( lang,jTable1.getSelectedRow(),2);
         tb5Model.setValueAt( time,jTable1.getSelectedRow(),3);
         tb5Model.setValueAt( genre,jTable1.getSelectedRow(),4);
         String movie = tb5Model.getValueAt(jTable1.getSelectedRow(),0).toString();
         String query = "UPDATE movie SET movie_id = ?, movie_name = ?,language = ?,show_time = ? ,genre = ?  where movie_id = ?";
             PreparedStatement ps = con.prepareStatement(query);
            ps.setString(1,mid);
            ps.setString(2,mname);
            ps.setString(3,lang);
            ps.setString(4,time);
            ps.setString(5,genre);
            ps.setString(6,movie);
            ps.executeUpdate();
            JOptionPane.showMessageDialog(this,"Updated Successfully");
            con.close();
        }catch (Exception ex) {
            Logger.getLogger(customer.class.getName()).log(Level.SEVERE, null, ex);
        } 
            }
        else if(jTable1.getSelectedRowCount()==0){
        JOptionPane.showMessageDialog(this,"Table is empty");
        }
        else{
            JOptionPane.showMessageDialog(this,"Please select single row for update");
        }
            
    }//GEN-LAST:event_JMUpdateActionPerformed

    private void JMsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMsaveActionPerformed
        DefaultTableModel tb2Model = (DefaultTableModel) jTable1.getModel();
        if(tb2Model.getRowCount()==0){
            JOptionPane.showMessageDialog(this,"Table is empty");
        }
        else
        {
         try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/projectdb","root","lynjsql#22");
            for(int i = 0;i<tb2Model.getRowCount();i++)
            {
                String mid = tb2Model.getValueAt(i,0).toString();
                String mname = tb2Model.getValueAt(i,1).toString();
                String lang = tb2Model.getValueAt(i,2).toString();
                String time = tb2Model.getValueAt(i,3).toString();
                String genre = tb2Model.getValueAt(i,4).toString();
                String query  = "insert into movie(movie_id,movie_name,language,show_time,genre) values(?,?,?,?,?)";
                PreparedStatement ps = con.prepareStatement(query);
                ps.setString(1,mid);
                ps.setString(2,mname);
                ps.setString(3,lang);
                ps.setString(4,time);
                ps.setString(5,genre);
                ps.executeUpdate();
            }
             JOptionPane.showMessageDialog(this,"Data inserted successfully ");
             tb2Model.setRowCount(0);
             con.close();
         }catch (Exception ex) {
            Logger.getLogger(customer.class.getName()).log(Level.SEVERE, null, ex);
        } 
        } 
    }//GEN-LAST:event_JMsaveActionPerformed

    private void JMdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMdeleteActionPerformed
        DefaultTableModel tb6Model = (DefaultTableModel) jTable1.getModel();
         if(jTable1.getSelectedRowCount()==1){
            try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/projectdb","root","lynjsql#22");
             String mid = tb6Model.getValueAt(jTable1.getSelectedRow(),0).toString();
             String query = "DELETE FROM movie WHERE movie_id = ?";
             PreparedStatement ps = con.prepareStatement(query);
            ps.setString(1,mid);
            ps.executeUpdate();
             tb6Model.removeRow(jTable1.getSelectedRow());
            }
            catch (Exception ex) {
            Logger.getLogger(customer.class.getName()).log(Level.SEVERE, null, ex);
        }             
         }
         else if(jTable1.getSelectedRowCount()==0){
            JOptionPane.showMessageDialog(this,"Table is empty");
        }
         else{
             JOptionPane.showMessageDialog(this,"Please select single row for deletion");
         }
    }//GEN-LAST:event_JMdeleteActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        DefaultTableModel tb4Model = (DefaultTableModel) jTable1.getModel();
        String mid = tb4Model.getValueAt(jTable1.getSelectedRow(),0).toString();
        String mname = tb4Model.getValueAt(jTable1.getSelectedRow(),1).toString();
        String lang = tb4Model.getValueAt(jTable1.getSelectedRow(),2).toString();
        String time = tb4Model.getValueAt(jTable1.getSelectedRow(),3).toString();
        String genre = tb4Model.getValueAt(jTable1.getSelectedRow(),4).toString();
        
        TMovieId.setText(mid);
        TMovieName.setText(mname);
        TLanguage.setText(lang);
        TShowtime.setText(time);
        TGenre.setText(genre);
        
    }                                    

    private void passwordActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {                                      
       
    }//GEN-LAST:event_jTable1MouseClicked

    private void JMClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMClearActionPerformed
         DefaultTableModel tb7Model = (DefaultTableModel) jTable1.getModel();
        tb7Model.setRowCount(0);
        TMovieId.setText("");
        TMovieName.setText("");
        TLanguage.setText("");
        TShowtime.setText("");
        TGenre.setText("");
    }//GEN-LAST:event_JMClearActionPerformed

    private void JMbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMbackActionPerformed
        dispose();
        menu mn = new menu();
        mn.show();
    }//GEN-LAST:event_JMbackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Movietable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Movietable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Movietable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Movietable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Movietable().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JMClear;
    private javax.swing.JButton JMInsert;
    private javax.swing.JButton JMUpdate;
    private javax.swing.JButton JMback;
    private javax.swing.JButton JMdelete;
    private javax.swing.JButton JMsave;
    private javax.swing.JButton JMview;
    private javax.swing.JLabel LMovieId;
    private javax.swing.JLabel LMovieName;
    private javax.swing.JLabel MGenre;
    private javax.swing.JLabel MLanguage;
    private javax.swing.JLabel MShowtime;
    private javax.swing.JTextField TGenre;
    private javax.swing.JTextField TLanguage;
    private javax.swing.JTextField TMovieId;
    private javax.swing.JTextField TMovieName;
    private javax.swing.JTextField TShowtime;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
